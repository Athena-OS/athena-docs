---
import SearchPackages from "./search-packages.astro";
import FilterPackages from "./filter-packages.astro";

type Package = {
  id: number;
  documentId: string;
  package_name: string;
  version: string;
  category: string;
  description: string;
  installed_size: string;
  upstream_url: string;
  createdAt: string;
  updatedAt: string;
  publishedAt: string;
  locale: string;
  license: string;
};

let strapiURL = import.meta.env.STRAPI_URL;
let bearerToken = import.meta.env.STRAPI_READONLY_TOKEN;

const response = await fetch(
  `${strapiURL}/api/packages?sort[1]=package_name:asc`,
  {
    headers: {
      Authorization: `Bearer ${bearerToken}`,
      "Content-Type": "application/json",
    },
  }
);
const apiResponse = await response.json();
let packagesData = apiResponse.data;
let categoriesList: string[] = [];
packagesData.map(
  (p: Package) =>
    p.category.length > 0 &&
    p.category.split(",").forEach((i) => categoriesList.push(i.trim()))
);

let categoriesUnique: string[] = [...new Set(categoriesList.sort())];
console.log(categoriesUnique);
---

<div class="flex max-sm:flex-col max-sm:items-start items-center gap-4">
  <SearchPackages placeholder="Search Packages" />
  <FilterPackages items={categoriesUnique} />
</div>

<p id="search-status"></p>

<div class="mt-8 flow-root">
  <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6 lg:-mx-8">
    <div class="inline-block min-w-full py-2 align-middle px-4 sm:px-6 lg:px-8">
      <table
        class="table-auto border-collapse min-w-full divide-y divide-gray-300 dark:divide-gray-500"
      >
        <thead>
          <tr>
            <th
              style="padding-left: 1rem;"
              scope="col"
              class="w-2/12 py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 sm:pl-3"
              >Package
            </th>
            <th
              scope="col"
              class="w-1/12 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100"
              >Version</th
            >
            <th
              scope="col"
              class="w-1/12 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100"
            >
              Category
            </th>
            <th
              scope="col"
              style="width: 25%;"
              class="w-3/12 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100"
              >Description</th
            >
            <th
              scope="col"
              class="w-1/12 px-3 py-3.5 text-left text-sm font-semibold text-gray-900 dark:text-gray-100 whitespace-nowrap"
              >Installed Size</th
            >
            <th
              scope="col"
              class="w-1/12 relative py-3.5 pl-3 pr-4 sm:pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100"
              >License</th
            >
            <th
              scope="col"
              style="padding-right: 1rem;"
              class="w-3/12 relative py-3.5 pl-3 pr-4 sm:pr-3 text-left text-sm font-semibold text-gray-900 dark:text-gray-100"
              >Homepage</th
            >
          </tr>
        </thead>
        <tbody id="dataRows">
          {
            packagesData.map((p: Package) => (
              <tr class="even:bg-gray-50 dark:even:bg-gray-800">
                <td
                  style="padding-left: 1rem;"
                  class="py-4 pl-4 px-3 text-sm font-medium text-gray-900 dark:text-gray-200 sm:pl-3"
                >
                  {p.package_name}
                </td>
                <td class="px-3 py-4 text-xs text-gray-500 dark:text-gray-400">
                  {p.version}
                </td>
                <td class="relative py-4 pr-4 text-left text-sm font-medium sm:pr-3 text-gray-500 dark:text-gray-400">
                  {p.category ? p.category : <span class="">—</span>}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
                  {p.description}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-400">
                  {p.installed_size ? p.installed_size : "—"}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
                  {p.license ? p.license : "—"}
                </td>
                <td
                  style="padding-right: 1rem; word-break:break-all;"
                  class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300"
                >
                  {p.upstream_url ? (
                    <a
                      href={p.upstream_url}
                      target="_blank"
                      rel="noopener noreferrer"
                      class="text-blue-500 underline hover:text-blue-700"
                    >
                      {p.upstream_url}
                    </a>
                  ) : (
                    "—"
                  )}
                </td>
              </tr>
            ))
          }
        </tbody>
      </table>
    </div>
  </div>
</div>

<script define:vars={{ strapiURL, bearerToken }}>
  const originalData = document.getElementById("dataRows").innerHTML;

  function applyStatusStyles() {
    const statusElements = document.querySelectorAll(".status");
    statusElements.forEach((element) => {
      let status = element.getAttribute("data-status");
      if (status) {
        status = status.toLowerCase();
        if (status === "done") {
          element.classList.add("text-green-500");
        } else if (status === "fail") {
          element.classList.add("text-red-600");
        } else if (status === "incomplete") {
          element.classList.add("text-yellow-500");
        } else if (status === "skip") {
          element.classList.add("text-gray-400");
        }
      }
    });
  }

  applyStatusStyles();

  function renderTable(packagesData) {
    const dataRows = document.getElementById("dataRows");
    dataRows.innerHTML = "";

    if (packagesData.length > 0 === false)
      document.getElementById("search-status").innerHTML = "No results found";

    packagesData.map((p) => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
                <td
                  style="padding-left: 1rem;"
                  class="py-4 pl-4 pr-3 text-sm font-medium text-gray-900 dark:text-gray-200 sm:pl-3"
                >
                  ${p.package_name}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-400">
                  ${p.version}
                </td>
                <td class="relative py-4 pl-3 pr-4 text-left text-sm font-medium sm:pr-3 text-gray-500 dark:text-gray-400">
                  ${p.category ? p.category : "—"}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
                  ${p.description}
                </td>
                <td class="px-3 py-4 text-sm text-gray-500 dark:text-gray-400">
                  ${p.installed_size ? p.installed_size : "—"}
                </td>
                <td
                  class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300"
                >
                  ${p.license ? p.license : "—"}
                </td>
                <td
                  style="padding-right: 1rem; word-break:break-all;"
                 class="px-3 py-4 text-sm text-gray-500 dark:text-gray-300">
                  ${p.upstream_url ? "<a href='" + p.upstream_url + "' target='_blank' rel='noopener noreferrer' class='text-blue-500 underline hover:text-blue-700' >" + p.upstream_url + "</a>" : "—"}
                </td>

      `;
      dataRows.appendChild(tr);
    });

    applyStatusStyles();
  }

  async function filterTables(categoryName) {
    const itemsPerPage = 5000;

    document.getElementById("search-status").innerHTML =
      `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" style="shape-rendering: auto; display: block; background: transparent;" width="30" height="30" xmlns:xlink="http://www.w3.org/1999/xlink"><g><g transform="translate(50 50)">
  <g transform="scale(0.8)">
    <g transform="translate(-50 -50)">
      <g>
        <animateTransform keyTimes="0;0.33;0.66;1" values="-20 -20;20 -20;0 20;-20 -20" dur="1s" repeatCount="indefinite" type="translate" attributeName="transform"></animateTransform>
        <path d="M44.19 26.158c-4.817 0-9.345 1.876-12.751 5.282c-3.406 3.406-5.282 7.934-5.282 12.751 c0 4.817 1.876 9.345 5.282 12.751c3.406 3.406 7.934 5.282 12.751 5.282s9.345-1.876 12.751-5.282 c3.406-3.406 5.282-7.934 5.282-12.751c0-4.817-1.876-9.345-5.282-12.751C53.536 28.033 49.007 26.158 44.19 26.158z" fill="#ffffff"></path>
        <path d="M78.712 72.492L67.593 61.373l-3.475-3.475c1.621-2.352 2.779-4.926 3.475-7.596c1.044-4.008 1.044-8.23 0-12.238 c-1.048-4.022-3.146-7.827-6.297-10.979C56.572 22.362 50.381 20 44.19 20C38 20 31.809 22.362 27.085 27.085 c-9.447 9.447-9.447 24.763 0 34.21C31.809 66.019 38 68.381 44.19 68.381c4.798 0 9.593-1.425 13.708-4.262l9.695 9.695 l4.899 4.899C73.351 79.571 74.476 80 75.602 80s2.251-0.429 3.11-1.288C80.429 76.994 80.429 74.209 78.712 72.492z M56.942 56.942 c-3.406 3.406-7.934 5.282-12.751 5.282s-9.345-1.876-12.751-5.282c-3.406-3.406-5.282-7.934-5.282-12.751 c0-4.817 1.876-9.345 5.282-12.751c3.406-3.406 7.934-5.282 12.751-5.282c4.817 0 9.345 1.876 12.751 5.282 c3.406 3.406 5.282 7.934 5.282 12.751C62.223 49.007 60.347 53.536 56.942 56.942z" fill="#eb8b0a"></path>
      </g>
    </g>
  </g>
</g><g></g></g></svg>`;

    const response = await fetch(
      `${strapiURL}/api/packages?filters[category][$contains]=${categoryName}&sort[1]=package_name:asc`,
      {
        headers: {
          Authorization: `Bearer ${bearerToken}`,
          "Content-Type": "application/json",
        },
      }
    );
    try {
      const apiResponse = await response.json();
      if (apiResponse) document.getElementById("search-status").innerHTML = "";
      renderTable(apiResponse.data);
    } catch (e) {
      document.getElementById("search-status").innerHTML =
        "Something went wrong";
      console.log(e);
    }
  }

  async function getPackagesTables(searchQuery) {
    const itemsPerPage = 5000;

    document.getElementById("search-status").innerHTML =
      `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid" style="shape-rendering: auto; display: block; background: transparent;" width="30" height="30" xmlns:xlink="http://www.w3.org/1999/xlink"><g><g transform="translate(50 50)">
  <g transform="scale(0.8)">
    <g transform="translate(-50 -50)">
      <g>
        <animateTransform keyTimes="0;0.33;0.66;1" values="-20 -20;20 -20;0 20;-20 -20" dur="1s" repeatCount="indefinite" type="translate" attributeName="transform"></animateTransform>
        <path d="M44.19 26.158c-4.817 0-9.345 1.876-12.751 5.282c-3.406 3.406-5.282 7.934-5.282 12.751 c0 4.817 1.876 9.345 5.282 12.751c3.406 3.406 7.934 5.282 12.751 5.282s9.345-1.876 12.751-5.282 c3.406-3.406 5.282-7.934 5.282-12.751c0-4.817-1.876-9.345-5.282-12.751C53.536 28.033 49.007 26.158 44.19 26.158z" fill="#ffffff"></path>
        <path d="M78.712 72.492L67.593 61.373l-3.475-3.475c1.621-2.352 2.779-4.926 3.475-7.596c1.044-4.008 1.044-8.23 0-12.238 c-1.048-4.022-3.146-7.827-6.297-10.979C56.572 22.362 50.381 20 44.19 20C38 20 31.809 22.362 27.085 27.085 c-9.447 9.447-9.447 24.763 0 34.21C31.809 66.019 38 68.381 44.19 68.381c4.798 0 9.593-1.425 13.708-4.262l9.695 9.695 l4.899 4.899C73.351 79.571 74.476 80 75.602 80s2.251-0.429 3.11-1.288C80.429 76.994 80.429 74.209 78.712 72.492z M56.942 56.942 c-3.406 3.406-7.934 5.282-12.751 5.282s-9.345-1.876-12.751-5.282c-3.406-3.406-5.282-7.934-5.282-12.751 c0-4.817 1.876-9.345 5.282-12.751c3.406-3.406 7.934-5.282 12.751-5.282c4.817 0 9.345 1.876 12.751 5.282 c3.406 3.406 5.282 7.934 5.282 12.751C62.223 49.007 60.347 53.536 56.942 56.942z" fill="#eb8b0a"></path>
      </g>
    </g>
  </g>
</g><g></g></g></svg>`;

    const response = await fetch(
      `${strapiURL}/api/packages?filters[$or][0][package_name][$contains]=${searchQuery}&filters[$or][1][description][$contains]=${searchQuery}&sort[1]=package_name:asc`,
      {
        headers: {
          Authorization: `Bearer ${bearerToken}`,
          "Content-Type": "application/json",
        },
      }
    );
    try {
      const apiResponse = await response.json();
      if (apiResponse) document.getElementById("search-status").innerHTML = "";
      renderTable(apiResponse.data);
    } catch (e) {
      document.getElementById("search-status").innerHTML =
        "Something went wrong";
      console.log(e);
    }
  }

  function getSearchQuery() {
    let debounceTimeout;

    document.getElementById("search-input").addEventListener("input", (e) => {
      const selectElement = document.getElementById("packages");
      selectElement.value = "";
      clearTimeout(debounceTimeout);
      let userInput = e.target.value;
      if (!userInput) {
        setTimeout(() => {
          document.getElementById("dataRows").innerHTML = originalData;
        }, 50);
        document.getElementById("search-status").innerHTML = "";
      }
      debounceTimeout = setTimeout(() => {
        if (userInput) getPackagesTables(userInput);
      }, 1000);
    });
  }

  getSearchQuery();

  function filterPackages() {
    const selectElement = document.getElementById("packages");

    selectElement.addEventListener("change", (e) => {
      let userInput = e.target.value;
      if (!userInput)
        document.getElementById("dataRows").innerHTML = originalData;
      if (userInput) filterTables(userInput);
    });
  }
  filterPackages();
</script>

<script defer>
  document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.getElementById("search-input");
    searchInput.value = "";
    const selectElement = document.getElementById("packages");
    selectElement.value = "";
  });
</script>
