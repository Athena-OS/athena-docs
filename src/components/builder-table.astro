---
import FilterBuilder from "./filter-builder.astro";
import SearchPackages from "./search-packages.astro";

type Package = {
  id: number;
  documentId: string;
  package_name: string;
  status_x86_64: string;
  status_x86_64_version: string;
  status_i686: string;
  status_i686_version: string;
  status_ARMv6h: string;
  status_ARMv6h_version: string;
  Status_ARMv7h: string;
  status_ARMv7h_version: string;
  status_AArch64: string;
  status_AArch64_version: string;
  createdAt: Date;
  updatedAt: Date;
  publishedAt: Date;
  locale: string;
  status_x86_64_logs: null | string;
  status_i686_logs: null | string;
  status_ARMv6h_logs: null | string;
  status_ARMv7h_logs: null | string;
  status_AArch64_logs: null | string;
  package_source: string;
};

let strapiURL = import.meta.env.STRAPI_URL;
let bearerToken = import.meta.env.STRAPI_READONLY_TOKEN;

const response = await fetch(
  `${strapiURL}/api/builders?pagination[page]=1&pagination[pageSize]=100&sort[1]=package_name:asc`,
  {
    headers: {
      Authorization: `Bearer ${bearerToken}`,
      "Content-Type": "application/json",
    },
  }
);
const apiResponse = await response.json();

let builderData = apiResponse.data.map((builder: Package) => ({
  ...builder,
  status_x86_64_logs:
    builder.status_x86_64_logs === "-" ? null : builder.status_x86_64_logs,
  status_i686_logs:
    builder.status_i686_logs === "-" ? null : builder.status_i686_logs,
  status_ARMv6h_logs:
    builder.status_ARMv6h_logs === "-" ? null : builder.status_ARMv6h_logs,
  status_ARMv7h_logs:
    builder.status_ARMv7h_logs === "-" ? null : builder.status_ARMv7h_logs,
  status_AArch64_logs:
    builder.status_AArch64_logs === "-" ? null : builder.status_AArch64_logs,
}));

function getUniqueValues(platformName: string) {
  let statuses: string[] = [];
  let statusString: string = "status_" + platformName;

  builderData.map((p: Package) => {
    // @ts-ignore
    if (p[statusString]?.length)
      // @ts-ignore
      p[statusString].split(",").forEach((i) => statuses.push(i.trim()));
  });

  return [...new Set(statuses.sort())];
}

let architectures = ["x86_64", "i686", "ARMv6h", "ARMv7h", "AArch64"];
let statuses;
if (builderData)
  statuses = architectures.map((str) => ({ [str]: getUniqueValues(str) }));
---

<SearchPackages placeholder="Search Builder" />

<FilterBuilder statuses={statuses} />

<div class="mt-8 flow-root">
  <div class="-mx-4 -my-2 overflow-x-auto sm:-mx-6">
    <div class="inline-block min-w-full py-2 align-middle px-4 sm:px-6 lg:px-8">
      <table
        class="table-auto border-collapse min-w-full divide-y divide-gray-300 dark:divide-gray-100"
        width="80rem"
      >
        <thead>
          <tr>
            <th
              scope="col"
              class="w-3/12 whitespace-nowrap py-3.5 pl-4 pr-3 text-left text-sm font-semibold text-gray-900 sm:pl-0"
              style="padding-left: 1rem;">Package Name</th
            >
            <th
              scope="col"
              class="w-[15%] whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900"
              >Status x86_64</th
            >
            <th
              scope="col"
              class="w-[15%] whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900"
              >Status i686</th
            >
            <th
              scope="col"
              class="w-[15%] whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900"
              >Status ARMv6h</th
            >
            <th
              scope="col"
              class="w-[15%] whitespace-nowrap px-2 py-3.5 text-left text-sm font-semibold text-gray-900"
              >Status ARMv7h</th
            >
            <th
              scope="col"
              class="w-[15%] relative whitespace-nowrap pl-3 pr-4 sm:pr-0 px-2 py-3.5 text-left text-sm font-semibold text-gray-900"
              >Status AArch64</th
            >
          </tr>
        </thead>
        <tbody
          class="divide-y divide-gray-200 dark:divide-gray-50"
          id="dataRows"
        >
        </tbody>
      </table>
      <div id="sentinel"></div>
    </div>
    <div
      class="px-6 sm:px-8 lg:px-12 font-mono text-sm text-white"
      id="search-status"
    >
    </div>
  </div>
</div>

<script>
  import { actions } from "astro:actions";

  let logURL = "https://logs.athenaos.org/";
  let architectures = ["x86_64", "i686", "ARMv6h", "ARMv7h", "AArch64"];
  const dataRows = document.getElementById("dataRows");
  const sentinel = document.getElementById("sentinel");
  let currentPage = 1;
  let pageSize = 100;
  let filterInput = null;
  let searchQuery = null;
  let isDone = false;
  let loading = false;

  function clearTableRows() {
    document.getElementById("dataRows").innerHTML = "";
  }

  async function getBuilderData() {
    if (loading || isDone) return;

    loading = true;
    newLoadingSpinner();
    let searchString =
      searchQuery?.length > 0
        ? `&filters[package_name][$contains]=${searchQuery}`
        : "";
    let paginationString = currentPage
      ? `&pagination[page]=${currentPage}&pagination[pageSize]=${pageSize}`
      : `&pagination[page]=1&pagination[pageSize]=${pageSize}`;
    let filterString =
      filterInput?.platformName && filterInput?.value
        ? `&filters[status_${filterInput.platformName}][$eq]=${filterInput.value}`
        : "";

    try {
      let response = await actions.getBuilderData({
        searchString,
        paginationString,
        filterString,
      });

      let apiResponse = await response.data;
      let error = await response.error;

      newRemoveLoadingSpinners();

      if (apiResponse.data.length === 0) {
        isDone = true;
        document.getElementById("search-status").innerHTML = "End of results";
        return;
      }

      let builderData = apiResponse.data.map((builder) => ({
        ...builder,
        status_x86_64_logs:
          builder.status_x86_64_logs === "-"
            ? null
            : builder.status_x86_64_logs,
        status_i686_logs:
          builder.status_i686_logs === "-" ? null : builder.status_i686_logs,
        status_ARMv6h_logs:
          builder.status_ARMv6h_logs === "-"
            ? null
            : builder.status_ARMv6h_logs,
        status_ARMv7h_logs:
          builder.status_ARMv7h_logs === "-"
            ? null
            : builder.status_ARMv7h_logs,
        status_AArch64_logs:
          builder.status_AArch64_logs === "-"
            ? null
            : builder.status_AArch64_logs,
      }));

      renderTable(builderData);
      currentPage++;
    } catch (e) {
      howErrorMessage();
      console.log(e);
    } finally {
      loading = false;
    }
  }

  function applyStatusStyles() {
    const statusElements = document.querySelectorAll(".status");
    statusElements.forEach((element) => {
      let status = element.getAttribute("data-status");
      if (status) {
        status = status.toLowerCase();
        if (status === "done") {
          element.classList.add("text-green-500");
        } else if (status === "fail") {
          element.classList.add("text-red-600");
        } else if (status === "incomplete") {
          element.classList.add("text-yellow-500");
        } else if (status === "skip") {
          element.classList.add("text-gray-400");
        }
      }
    });
  }

  function newLoadingSpinner() {
    const fragment = document.createDocumentFragment();

    Array.from({ length: 5 }).map((row) => {
      const tr = document.createElement("tr");
      tr.classList.add("skeletons");
      tr.innerHTML = `
                <td
                  style="padding-left: 1rem; min-width: 25%;"
                  class="whitespace-nowrap py-2 pl-4 pr-3 text-sm text-gray-500 dark:text-gray-200 sm:pl-0"
                >
                  <div class="flex items-center justify-between ">
<div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                  </div>
                </td>
                <td 
                class="whitespace-nowrap px-2 py-2 text-sm text-gray-900">
                    <div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                    
                </td>
                <td class="whitespace-nowrap px-2 py-2 text-sm text-gray-500">
                    <div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                </td>
                <td class="whitespace-nowrap px-2 py-2 text-sm text-gray-500">
                    <div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                </td>
                <td class="whitespace-nowrap px-2 py-2 text-sm text-gray-500">
                    <div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                </td>
                <td class="whitespace-nowrap px-2 py-2 text-sm text-gray-500">
                    <div
              class="animate-pulse rounded-md bg-gray-600"
              style="height: 20px; width: 100%;"
            ></div>
                </td>
      `;
      fragment.appendChild(tr);
    });

    dataRows.appendChild(fragment);
  }

  function newRemoveLoadingSpinners() {
    const skeletonElements = document.querySelectorAll(".skeletons");

    skeletonElements.forEach((element) => element.remove());
  }

  function showErrorMessage() {
    document.getElementById("search-status").innerHTML = "Something went wrong";
  }

  function clearStatusLine() {
    document.getElementById("search-status").innerHTML = "";
  }

  async function renderTable(packagesData) {
    if (!packagesData.length) {
      isDone = true;
      if (currentPage === 2) {
        document.getElementById("search-status").innerHTML = "No results found";
      } else {
        document.getElementById("search-status").innerHTML = "End of results";
      }
    }

    const fragment = document.createDocumentFragment();
    packagesData.map((row) => {
      const tr = document.createElement("tr");
      tr.innerHTML = `
                <td
                  style="padding-left: 1rem; word-break:break-all;"
                  class="py-2 pl-4 pr-3 text-sm text-gray-500 dark:text-gray-200 sm:pl-0"
                >
                  <div class="flex items-center justify-between gap-2">
                    <span class="font-medium">${row.package_name ?? ""}</span>
                    <span class="shrink-0">

     ${row?.package_source ? "<a href=" + row.package_source + "> <img src='/cube.svg' class='h-5 w-5' /> </a>" : null}
                    </span>
                  </div>
                </td>
                <td class="px-2 py-2 text-sm text-gray-900" style=" word-break:break-all;">
                    <a
                      href=${logURL + row.status_x86_64_logs}
                      style="${row.status_x86_64_logs === null ? "pointer-events: none;text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; " : "text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; "}"
                      class="flex justify-between gap-x-2 hover:opacity-80"
                    >
                      <span
                        class="status"
                        data-status=${row.status_x86_64 ?? ""}
                        style="  white-space: nowrap;"
                      >
                        ${row.status_x86_64 ?? ""}
                      </span>
                      <span
                        class="text-xs text-gray-500 dark:text-gray-400"
                        style="line-height:1.3rem!important"
                      >
                        ${row.status_x86_64_version ?? ""}
                      </span>
                    </a>
                    
                </td>
                <td class="px-2 py-2 text-sm text-gray-500" style=" word-break:break-all;">
                    <a
                      href=${logURL + row?.status_i686_logs}
                      style="${row.status_i686_logs === null ? "pointer-events: none;text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; " : "text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; "}"
                      class="flex justify-between gap-x-2 hover:opacity-80"
                    >
                      <span class="status" data-status=${row.status_i686 ?? ""}>
                        ${row.status_i686 ?? ""}
                      </span>
                      <span
                        class="text-xs text-gray-500 dark:text-gray-400"
                        style="line-height:1.3rem!important"
                      >
                        ${row.status_i686_version ?? ""}
                      </span>
                    </a>
                </td>
                <td class="px-2 py-2 text-sm text-gray-500" style=" word-break:break-all;">
                    <a
                      href=${logURL + row.status_ARMv6h_logs}
                      style="${row.status_ARMv6h_logs === null ? "pointer-events: none;text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; " : "text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; "}"
                      class="flex items-center justify-between "
                    >
                      <span
                        class="status"
                        data-status=${row.status_ARMv6h ?? ""}
                      >
                        ${row.status_ARMv6h ?? ""}
                      </span>
                      <span
                        class="text-xs text-gray-500 dark:text-gray-400"
                        style="line-height:1.3rem !important"
                      >
                        ${row.status_ARMv6h_version ?? ""}
                      </span>
                    </a>
                </td>
                <td class="px-2 py-2 text-sm text-gray-500" style=" word-break:break-all;">
                    <a
                      href=${logURL + row.status_ARMv7h_logs}
                      style="${row.status_ARMv7h_logs === null ? "pointer-events: none;text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; " : "text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; "}"
                      class="flex items-center justify-between "
                    >
                      <span
                        class="status"
                        data-status=${row.Status_ARMv7h ?? ""}
                      >
                        ${row.Status_ARMv7h ?? ""}
                      </span>
                      <span
                        class="text-xs text-gray-500 dark:text-gray-400"
                        style="line-height:1.3rem!important"
                      >
                        ${row.status_ARMv7h_version ?? ""}
                      </span>
                    </a>
                </td>
                <td 
                style="padding-right: 1rem; word-break:break-all;"
                class="px-2 py-2 text-sm text-gray-500">
                    <a
                      href=${logURL + row.status_AArch64_logs}
                      style="${row.status_AArch64_logs === null ? "pointer-events: none;text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; " : "text-decoration-line: none; font-size: 0.875rem; line-height: 1.25rem; "}"
                      class="flex items-center justify-between "
                    >
                      <span
                        class="status"
                        data-status=${row.status_AArch64 ?? ""}
                      >
                        ${row.status_AArch64 ?? ""}
                      </span>
                      <span class="relative py-2 pl-3 pr-4 text-right sm:pr-0 text-xs text-gray-500 dark:text-gray-400">
                        ${row.status_AArch64_version ?? ""}
                      </span>
                    </a>
                </td>
      `;
      fragment.appendChild(tr);
    });

    dataRows.appendChild(fragment);

    applyStatusStyles();
  }

  function clearFilters() {
    ["x86_64", "i686", "ARMv6h", "ARMv7h", "AArch64"].map((a) => {
      const selectElement = document.getElementById(a);
      selectElement.value = "";
    });
  }

  function getSearchQuery() {
    let debounceTimeout;

    document.getElementById("search-input").addEventListener("input", (e) => {
      clearTimeout(debounceTimeout);
      let userInput = e.target.value;

      if (!userInput.length) {
        isDone = false;
        searchQuery = null;
        currentPage = 1;
        clearTableRows();
        clearStatusLine();
        getBuilderData();
      }

      debounceTimeout = setTimeout(() => {
        if (userInput) {
          isDone = false;
          searchQuery = userInput;
          currentPage = 1;
          clearTableRows();
          clearStatusLine();
          getBuilderData();
        }
      }, 1000);
    });
  }

  function filterPackages(platformName) {
    const selectElement = document.getElementById(platformName);

    selectElement.addEventListener("change", (e) => {
      let userInput = e.target.value;

      if (!userInput.length) {
        isDone = false;
        filterInput = null;
        currentPage = 1;
        clearTableRows();
        clearStatusLine();
        getBuilderData();
      }

      if (userInput) {
        isDone = false;
        let toBeCleared = architectures.filter((item) => item !== platformName);
        toBeCleared.map((a) => {
          const selectElement = document.getElementById(a);
          selectElement.value = "";
        });
        filterInput = { platformName, value: userInput };
        currentPage = 1;
        clearTableRows();
        clearStatusLine();
        getBuilderData();
      }
    });
  }

  applyStatusStyles();
  getSearchQuery();
  architectures.map((ar) => filterPackages(ar));

  const observer = new IntersectionObserver((entries) => {
    const entry = entries[0];
    if (entry.isIntersecting && !isDone) {
      getBuilderData();
    }
  });

  observer.observe(sentinel);
</script>

<script defer>
  document.addEventListener("DOMContentLoaded", () => {
    const searchInput = document.getElementById("search-input");
    searchInput.value = "";
    ["x86_64", "i686", "ARMv6h", "ARMv7h", "AArch64"].map((a) => {
      const selectElement = document.getElementById(a);
      selectElement.value = "";
    });
  });
</script>
